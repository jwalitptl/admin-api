version: '3.8'

services:
  admin-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      CONFIG_FILE: /app/config/config.yml
    volumes:
      - ./migrations:/migrations
      - ./config/config.yml:/app/config/config.yml
    command: >
      /bin/sh -c "
        while ! nc -z postgres 5432; do
          echo 'Waiting for postgres...';
          sleep 1;
        done;
        echo 'PostgreSQL is ready!';
        ./admin-api
      "
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aiclinic
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    hostname: postgres

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    name: app-network
    driver: bridge 